//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shopsvc
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/Week4.EsercitazioneWebServices.Core.Model" +
        "s")]
    public partial class Client : object
    {
        
        private string ClientCodeField;
        
        private string FirstNameField;
        
        private int IdField;
        
        private string LastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientCode
        {
            get
            {
                return this.ClientCodeField;
            }
            set
            {
                this.ClientCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Shopsvc.IShopService")]
    public interface IShopService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/FetchClients", ReplyAction="http://tempuri.org/IShopService/FetchClientsResponse")]
        System.Collections.Generic.List<Shopsvc.Client> FetchClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/FetchClients", ReplyAction="http://tempuri.org/IShopService/FetchClientsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Shopsvc.Client>> FetchClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/AddClient", ReplyAction="http://tempuri.org/IShopService/AddClientResponse")]
        bool AddClient(Shopsvc.Client newClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/AddClient", ReplyAction="http://tempuri.org/IShopService/AddClientResponse")]
        System.Threading.Tasks.Task<bool> AddClientAsync(Shopsvc.Client newClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/EditClient", ReplyAction="http://tempuri.org/IShopService/EditClientResponse")]
        bool EditClient(Shopsvc.Client newClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/EditClient", ReplyAction="http://tempuri.org/IShopService/EditClientResponse")]
        System.Threading.Tasks.Task<bool> EditClientAsync(Shopsvc.Client newClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/DeleteClientById", ReplyAction="http://tempuri.org/IShopService/DeleteClientByIdResponse")]
        bool DeleteClientById(int idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IShopService/DeleteClientById", ReplyAction="http://tempuri.org/IShopService/DeleteClientByIdResponse")]
        System.Threading.Tasks.Task<bool> DeleteClientByIdAsync(int idClient);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface IShopServiceChannel : Shopsvc.IShopService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ShopServiceClient : System.ServiceModel.ClientBase<Shopsvc.IShopService>, Shopsvc.IShopService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ShopServiceClient() : 
                base(ShopServiceClient.GetDefaultBinding(), ShopServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IShopService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ShopServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ShopServiceClient.GetBindingForEndpoint(endpointConfiguration), ShopServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ShopServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ShopServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ShopServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ShopServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ShopServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Collections.Generic.List<Shopsvc.Client> FetchClients()
        {
            return base.Channel.FetchClients();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Shopsvc.Client>> FetchClientsAsync()
        {
            return base.Channel.FetchClientsAsync();
        }
        
        public bool AddClient(Shopsvc.Client newClient)
        {
            return base.Channel.AddClient(newClient);
        }
        
        public System.Threading.Tasks.Task<bool> AddClientAsync(Shopsvc.Client newClient)
        {
            return base.Channel.AddClientAsync(newClient);
        }
        
        public bool EditClient(Shopsvc.Client newClient)
        {
            return base.Channel.EditClient(newClient);
        }
        
        public System.Threading.Tasks.Task<bool> EditClientAsync(Shopsvc.Client newClient)
        {
            return base.Channel.EditClientAsync(newClient);
        }
        
        public bool DeleteClientById(int idClient)
        {
            return base.Channel.DeleteClientById(idClient);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClientByIdAsync(int idClient)
        {
            return base.Channel.DeleteClientByIdAsync(idClient);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IShopService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IShopService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/WcfServiceLibrary1/ShopService/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ShopServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IShopService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ShopServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IShopService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IShopService,
        }
    }
}
